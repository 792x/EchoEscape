<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFlipoff</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = false;
slot1 = noone;
failed = false;
name = "Error";
flip1 = noone;
flip2 = noone;
flip3 = noone;
flip4 = noone;

a = false;
b = false;
c = false;
d = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(slot1 !=noone){
state = slot1.state;
}

if(state){
sprite_index = sFlipon
}else{
sprite_index = sFlipoff
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(slot1 != noone){
draw_line_width_color(gridX * GRID_SIZE + 16, gridY * GRID_SIZE + 16, slot1.gridX* GRID_SIZE + 16, slot1.gridY* GRID_SIZE + 16, 3, c_red, c_blue);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(slot1 != noone){
    if(slot1.slot1 != noone &amp;&amp; slot1.slot2 != noone )/*&amp;&amp; slot1.slot1.slot1 != noone &amp;&amp; slot1.slot1.slot2 != noone &amp;&amp; slot1.slot2.slot1 != noone &amp;&amp; slot1.slot2.slot2 != noone)*/{
        if(slot1.name == "And Gate"){
            if(slot1.slot1.name == "Flip A" &amp;&amp; slot1.slot2.name == "Flip B" || slot1.slot1.name == "Flip B" &amp;&amp; slot1.slot2.name == "Flip A"){
                //if(slot1.slot2.slot1.name == "Flip C" &amp;&amp; slot1.slot2.slot2.name == "Flip D" || slot1.slot2.slot1.name == "Flip D" &amp;&amp; slot1.slot2.slot2.name == "Flip C"){
                    // correct.
                   // sprite_index = sGateAnd;
                    audio_play_sound(success, 10, false);
                    room_goto(demo1);
                    global.console_sprite1 = sprite_console_green;
                    global.gate1_alive = false;
                    
                    
          }    
        }  /*
        if(slot1.slot1.slot1.name == "Flip C" &amp;&amp; slot1.slot1.slot2.name == "Flip D" || slot1.slot1.slot1.name == "Flip D" &amp;&amp; slot1.slot1.slot2.name == "Flip C"){
                if(slot1.slot2.slot1.name == "Flip A" &amp;&amp; slot1.slot2.slot2.name == "Flip B" || slot1.slot2.slot1.name == "Flip B" &amp;&amp; slot1.slot2.slot2.name == "Flip A"){
                    // correct.
                  //  sprite_index = sGateAnd;
                   // room_goto(room2);
        }    
      }
    }
*/}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(demo1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
