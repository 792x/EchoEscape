<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sNAND</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = false;
name = "Error";
slot1 = noone;
slot2 = noone;
slot3 = noone;
slot4 = noone;

a = false;
b = false;
c = false;
d = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(slot1 == noone){
    state = false;
}else if(slot2 == noone){
    state = !(slot1.state);
}else if(slot3 == noone){
    state = !(slot1.state &amp;&amp; slot2.state);
}else if(slot4 == noone){
    state = !(slot1.state &amp;&amp; slot2.state &amp;&amp; slot3.state);
}else{
    state = !(slot1.state &amp;&amp; slot2.state &amp;&amp; slot3.state &amp;&amp; slot4.state);
}

/*if(state){
sprite_index = sFlipon
}else{
sprite_index = sFlipoff
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(slot1 != noone){
draw_line_width_color(gridX * GRID_SIZE + 16, gridY * GRID_SIZE + 16, slot1.gridX* GRID_SIZE + 16, slot1.gridY* GRID_SIZE + 16, 3, c_red, c_blue);
}
if(slot2 != noone){
draw_line_width_color(gridX * GRID_SIZE + 16, gridY * GRID_SIZE + 16, slot2.gridX* GRID_SIZE + 16, slot2.gridY* GRID_SIZE + 16, 3, c_red, c_blue);
}
if(slot3 != noone){
draw_line_width_color(gridX * GRID_SIZE + 16, gridY * GRID_SIZE + 16, slot3.gridX* GRID_SIZE + 16, slot3.gridY* GRID_SIZE + 16, 3, c_red, c_blue);
}
if(slot4 != noone){
draw_line_width_color(gridX * GRID_SIZE + 16, gridY * GRID_SIZE + 16, slot4.gridX* GRID_SIZE + 16, slot4.gridY* GRID_SIZE + 16, 3, c_red, c_blue);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
